<!-- vim: set ft=markdown: -->
cfn-tool-transform(1) -- expand template macros
===============================================

## SYNOPSIS

`cfn-tool` `transform` [<OPTIONS>...] <TEMPLATE-FILE>

## DESCRIPTION

Expands macros in the <TEMPLATE-FILE>, optionally passing the resulting YAML
through a linter, prints it to `stdout`, and exits. No nested templates are
processed, no packages are prepared, no validation is performed, and no stack
is deployed. This can be useful for debugging.

## OPTIONS

The `transform` command accepts the following options:

  * `-l`, `--linter`=<COMMAND>:
    Run <COMMAND> on each processed template file, aborting if the <COMMAND>
    fails. The template file path is appended to the <COMMAND> string and the
    resulting command line is evaluated in the `bash`(1) shell (see the
    `EXAMPLES` section below). The <COMMAND> is executed with its working
    directory set to the current directory (ie. the directory in which the
    `cfn-tool` program runs).

  * `-p`, `--profile`=<NAME>:
    Use the AWS profile given by <NAME> to configure the AWS credentials
    provider chain. When this option is specified the <NAME> is propagated to
    child processes via the `AWS_PROFILE` environment variable (eg. when the
    `aws`(1) tool is called from a template).

  * `-q`, `--quiet`:
    Suppress all informational, diagnostic, and warning output.

  * `-r`, `--region`=<NAME>:
    Use the AWS region given by <NAME> for all AWS API calls. When this option
    is specified the <NAME> is propagated to child processes via the
    `AWS_REGION` and `AWS_DEFAULT_REGION` environment variables (eg. when the
    `aws`(1) tool is called from a template).

  * `-v`, `--verbose`:
    Print extra diagnostic output while processing.

## EXAMPLES

Transform the template _infra/my-template.yml_, lint it with `cfn-lint`(1),
and print the result to `stdout`:

    cfn-tool transform --linter "cfn-lint -f pretty" infra/my-template.yml

## EXIT STATUS

Exits with a status of 1 if an error occurred, or 0 otherwise.

## BUGS

Please open an issue: <https://github.com/daggerml/cfn-tool/issues>.

## SEE ALSO

Man pages for other commands:

  * `cfn-tool`(1)
  * `cfn-tool-deploy`(1)
  * `cfn-tool-update`(1)

Documentation for built-in macros:

  * `cfn-tool-macros`(7)

## COPYRIGHT

Copyright Â© ${YEAR} Micha Niskin `<micha.niskin@gmail.com>`, distributed under
the following license:

* <https://raw.githubusercontent.com/daggerml/cfn-tool/${VERSION}/LICENSE>

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
